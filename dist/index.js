"use strict";const t=(t,...e)=>{t.classList.remove(...e),t.offsetWidth,t.classList.add(...e)},e=["C","C#","D","D#","E","F","F#","G","G#","A","A#","B"];function n(t){const n=function(t){const e=Math.log(t/440)/Math.log(2)*12;return Math.round(e)+69}(t);return{value:n%12,index:n,name:e[n%12],cents:i(t,n),octave:Math.floor(n/12)-1,frequency:t}}function i(t,e){return Math.floor(1200*Math.log(t/function(t){return 440*Math.pow(2,(t-69)/12)}(e))/Math.log(2))}function*o(t,e=((t,e)=>t===e)){const n=t[Symbol.iterator](),{done:i,value:o}=n.next();if(i)return;let a=[];a.push(o);let r=o;for(const t of function(t){return{[Symbol.iterator]:()=>t}}(n))e(t,r)?(a.push(t),r=t):(yield[...a],a=[t],r=t);a.length&&(yield a)}
/**
 * Copyright (C) 2021 Online Mic Test
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 * @license
 */console.log("Licensed under AGPL-3.0: https://github.com/onlinemictest/guitar-tuner");const a=Math.pow(2,12),r=["E_4","B_3","G_3","D_3","A_2","E_2"];Aubio().then((({Pitch:e})=>{if(function(){if(window.AudioContext=window.AudioContext||window.webkitAudioContext,!window.AudioContext)return alert("AudioContext not supported");void 0===navigator.mediaDevices&&(navigator.mediaDevices={}),void 0===navigator.mediaDevices.getUserMedia&&(navigator.mediaDevices.getUserMedia=function(t){const e=navigator.webkitGetUserMedia||navigator.mozGetUserMedia;return e||alert("getUserMedia is not implemented in this browser"),new Promise((function(n,i){e.call(navigator,t,n,i)}))})}(),!("WebAssembly"in window&&"AudioContext"in window&&"createAnalyser"in AudioContext.prototype&&"createScriptProcessor"in AudioContext.prototype&&"trunc"in Math))return alert("Browser not supported");const i=document.getElementById("audio-start"),l=document.getElementById("audio-pause"),c=document.getElementById("match-circle-r"),d=document.getElementById("match-circle-l"),u=document.getElementById("inner-circle");let m,f,y,h;const g=c.innerText;l.addEventListener("click",(()=>{y.disconnect(m.destination),f.disconnect(y),m.close(),i.style.display="block",l.style.display="none",d.style.transform="translateX(30vw)",c.innerText=g,c.classList.add("with-text"),c.style.color="",t(i,"blob-animation")})),i.addEventListener("click",(()=>{m=new AudioContext,f=m.createAnalyser(),y=m.createScriptProcessor(a,1,1),h=new e("default",a,1,m.sampleRate),navigator.mediaDevices.getUserMedia({audio:!0}).then((e=>{m.createMediaStreamSource(e).connect(f),f.connect(y),y.connect(m.destination),i.style.display="none",l.style.display="block",c.innerText="Pluck a String",c.classList.add("with-text"),t(l,"shrink-animation"),d.style.visibility="visible";let a="";const g=new Array(3).fill(""),v=new Map(r.map((t=>[t,new Array(36).fill(50)]))),w=new Array(36).fill("");y.addEventListener("audioprocess",(t=>{var e;const i=t.inputBuffer.getChannelData(0),r=n(h.do(i));if(s(w,r.name),[...o(w.filter((t=>!!t)))].every((t=>t.length<=3)))c.innerText="Pluck a String",c.classList.add("with-text"),d.style.transform="translateX(30vw)",c.style.color="";else if(r.name){if(g.every((t=>t===r.name))&&!Number.isNaN(r.cents)){const t=2*Math.abs(r.cents),n=Math.min(10,Math.round(100/t)),i=((t,e=1)=>Math.round(t/e)*e)(r.cents,n);c.innerText=r.name,c.classList.remove("with-text");const o=`${r.name}_${r.octave}`;s(v.get(o),i);const m=null!==(e=v.get(o))&&void 0!==e?e:[],f=m.filter((t=>0===t)),y=.5*m.length,h=(l=f.length/(y+1),Math.max(0,Math.min(1,l)));u.style.transition=a!==o?"":"transform 350ms ease",u.style.transform=`scale(${1-h})`,c.style.color=1===h?"#fff":"#fff8",d.style.transition="transform 350ms ease",d.style.transform=`translateX(${i*(1-h)}%)`,a=o}s(g,r.name)}var l}))}))}))}));const s=(t,e)=>(null==t||t.pop(),null==t||t.unshift(e),t);
//# sourceMappingURL=index.js.map
